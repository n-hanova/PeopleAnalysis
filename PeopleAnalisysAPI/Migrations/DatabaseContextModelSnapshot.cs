// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PeopleAnalysis.Services;

namespace PeopleAnalisysAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PeopleAnalysis.Models.AnalysObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("AnalysObjects");
                });

            modelBuilder.Entity("PeopleAnalysis.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreateId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("OwnerId")
                        .HasColumnType("text");

                    b.Property<string>("Social")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("TimeComplete")
                        .HasColumnType("interval");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("UserUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("PeopleAnalysis.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("RequestId")
                        .HasColumnType("integer");

                    b.Property<bool>("ResultAnswer")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("PeopleAnalysis.Models.ResultObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AnalysObjectId")
                        .HasColumnType("integer");

                    b.Property<float>("Count")
                        .HasColumnType("real");

                    b.Property<int?>("ResultId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnalysObjectId");

                    b.HasIndex("ResultId");

                    b.ToTable("ResultObjects");
                });

            modelBuilder.Entity("PeopleAnalysis.Models.Result", b =>
                {
                    b.HasOne("PeopleAnalysis.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId");
                });

            modelBuilder.Entity("PeopleAnalysis.Models.ResultObject", b =>
                {
                    b.HasOne("PeopleAnalysis.Models.AnalysObject", "AnalysObject")
                        .WithMany()
                        .HasForeignKey("AnalysObjectId");

                    b.HasOne("PeopleAnalysis.Models.Result", "Result")
                        .WithMany("ResultObjects")
                        .HasForeignKey("ResultId");
                });
#pragma warning restore 612, 618
        }
    }
}
