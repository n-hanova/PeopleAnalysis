// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using Microsoft.ML;
using Microsoft.ML.Data;

namespace PeopleAnalysisML.Model
{
    public interface IMLService
    {
        Dictionary<string, float> Predict(ModelInput input);
    }

    public class ConsumeModel : IMLService
    {
        private readonly string modelPath;

        public ConsumeModel(string modelPath)
        {
            this.modelPath = modelPath;
        }

        public Dictionary<string, float> Predict(ModelInput input)
        {

            // Create new MLContext
            MLContext mlContext = new MLContext();

            // Load model & create prediction engine
            ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);
            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);

            // Use model to make prediction on input data
            ModelOutput result = predEngine.Predict(input);

            Dictionary<string, float> resultSet = new Dictionary<string, float>();
            var column = predEngine.OutputSchema.GetColumnOrNull("Score");
            var slotNames = new VBuffer<ReadOnlyMemory<char>>();
            column.Value.GetSlotNames(ref slotNames);
            var num = 0;
            foreach (var denseValue in slotNames.DenseValues())
                resultSet.Add(denseValue.ToString(), result.Score[num++]);

            return resultSet;
        }
    }
}
